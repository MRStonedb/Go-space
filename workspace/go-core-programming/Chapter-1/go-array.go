package main

import (
	"fmt"
)

// 数组的特点
// (1）数组创建完长度就固定了，不可以再追加元素。
// (2）数组是值类型的，数组赋值或作为函数参数都是值拷贝。
// (3) 数组长度是数组类型的组成部分， ［1 O]int 和［20]int 表示不同的类型。
// (4）可以根据数组创建切片（见1.6.3 节切片）。

func main() {

	var b [2]int                     //声明一个有两个整型的数纽，但元素默认位都是0 ， 一般很少这样使用
	c := [...]float64{7.0, 8.5, 9.1} //[ . .. ］后面跟字面量初始化列表数组初始化
	d := [3]int{1, 2, 3}             //指定长度和初始化字面量
	e := [...]int{1, 2, 3}           //不指定长度，但是由后面的初始化列表数量来确定其长度

	f := [3]int{1: 1, 2: 8}   //指定总长度，并通过索引值进行初始化，没有初始化元素时使用类型默认值
	g := [...]int{1: 1, 2: 3} //不指定总长度，通过索引值进行初始化，数组长度由最后一个索引值确定，没有指定索引的元素被初始化为类型的零值

	fmt.Println("b:", b)
	fmt.Println("c:", c)
	fmt.Println("d:", d)
	fmt.Println("e:", e)
	fmt.Println("f:", f)
	fmt.Println("g:", g)
}
